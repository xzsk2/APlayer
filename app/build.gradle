apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
    maven {
        url 'https://maven.google.com'
    }
}

ext {
    supportLibVersion = '28.0.0'
}

android {
    compileSdkVersion 29
//    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId 'remix.myplayer.smb'
        minSdkVersion 17
        targetSdkVersion 29

        versionCode 15681
        versionName "1.5.6.8"

        flavorDimensions "default"
        vectorDrawables.useSupportLibrary = true

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        multiDexEnabled true

        buildConfigField("String", "LASTFM_API_KEY", "\"${getProperty(getProperties('../local.properties'), 'LASTFM_API_KEY')}\"")
        buildConfigField("String", "GOOGLE_PLAY_LICENSE_KEY", "\"${getProperty(getProperties('../local.properties'), 'GOOGLE_PLAY_LICENSE_KEY')}\"")
        buildConfigField("String", "GITHUB_SECRET_KEY", "\"${getProperty(getProperties('../local.properties'), 'GITHUB_SECRET_KEY')}\"")
    }

    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            def properties = getProperties('../local.properties')
            keyAlias properties['keystore.keyAlias']
            keyPassword properties['keystore.keyPassword']
            storeFile file(properties['keystore.storeFile'])
            storePassword properties['keystore.storePassword']

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled false

            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'

            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
        release {
            //混淆代码
            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }

        android.applicationVariants.all {variant ->
            variant.outputs.all {
                outputFileName = "APlayer_v${defaultConfig.versionName}_${variant.productFlavors[0].name}_${new Date().format("yyyy-MM-dd HH-mm")}.apk"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    androidExtensions {
        experimental = true
    }

    productFlavors {
        assistant91 {}
        baidu {}
        anzhuomarket {}
        xiaomi {}
        kuan {}
        google {}
        productFlavors.all {flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'MissingTranslation'
        disable 'InvalidPackage'
    }

    configurations.all {
        resolutionStrategy.eachDependency {DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$supportLibVersion"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'

    //support
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.media:media:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    //coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0-M2'

    //fresco
    implementation 'com.remix.fresco:fresco:1.10.2'

    //materialDialog
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.11'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    //rxpermission
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    //kotlin
    implementation 'org.jetbrains.anko:anko-common:0.10.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //leakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-2'

    //butterKnife
    implementation 'com.jakewharton:butterknife:10.2.3'
    kapt 'com.jakewharton:butterknife-compiler:10.2.3'

    //gp
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    //room
    implementation 'androidx.room:room-runtime:2.2.6'
    kapt 'androidx.room:room-compiler:2.2.6' // use kapt for Kotlin
    implementation 'androidx.room:room-rxjava2:2.2.6'

    //rxlife
//    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0'

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //other
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation 'com.soundcloud.android:android-crop:1.0.1@aar'
    implementation 'com.github.promeg:tinypinyin:2.0.1'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'com.github.tony19:logback-android:2.0.0'

}

def getProperties(String fileName) {
    final Properties properties = new Properties()
    def file = file(fileName)
    if (file.exists()) {
        file.withInputStream {stream -> properties.load(stream)}
    }
    return properties
}

def getProperty(Properties properties, String name) {
    return properties.getProperty(name) ?: "$name missing"
}


